#summary Getting started with developing on the codebase for hackers

= Introduction =

In order to develop the WidgetFX framework, a number of technologies are needed, many of which are cutting edge.  This document may become outdated very quickly, so please update it if you notice any discrepancies.

= Details =

You need the following technologies to get started developing WidgetFX
  * Java SE Update 10 JRE and JDK (for transparency, shaped windows, and performance)
  * JavaFX SDK with Netbeans 6.1

== Downloading Java SE Update 10 ==

To install the Java SE Update 10, do the following:
  # Go to the Java SE 10 download page: http://download.java.net/jdk6/
  # Download and install the *JRE* installer for your platform of choice
  # Also, download and install the *JDK* installer

Make sure to check back frequently and get the latest build.

== Getting the latest version of the JavaFX SDK ==

To install the JavaFX SDK:
  # Go to the JavaFX SDK Website: http://java.sun.com/javafx/downloads/
  # Find the download link for Netbeans IDE 6.1 with JavaFX (recommended)
    * Alternatively, there is a download for the Java plug-in if you dig enough
    * If you follow this path, make sure to update your existing Netbeans install to use Java SE Update 10

Make sure to specify Java SE Update 10 as the JDK for Netbeans when you first start it.

== Opening up WidgetFX in Netbeans ==

There are a total of 5 Netbeans projects.  One for the core API, one for the dock container, and three others for each of the core widgets.  All the projects depend on the API, but are otherwise independent.

Make sure to open all five projects in Netbeans.  The WidgetFX project should be the main project, but you will also need to build the Clock, SlideShow, and WebFeed projects if you want any widgets to show up in the dock.

Build the widgets in the following order:
  # Build the WidgetFX-API project (optional, should automatically happen)
  # Build all 3 widget projects by right clicking on the project in the Project view and choosing "Build Project".  This should invoke the default Web Start build, but not run the project.
  # Build the WidgetFX project last

To run the application click "Run" with WidgetFX as the main project.  This should launch the default Web Start application runner and dynamically read in the widgets you built earlier.

If you make any changes to the 3 widgets, you must recompile them separately per the earlier instructions prior to run.

If you run into any issues in future builds, try running a clean before reporting any problems.  Due to a defect in Netbeans, this may require a restart to free up file locks.  (also, make sure the WidgetFX app is not running)